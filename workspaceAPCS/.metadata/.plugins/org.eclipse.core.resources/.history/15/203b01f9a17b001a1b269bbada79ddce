/**
 * A price comparator for trade orders.
 * @author Richard Cao rcao266
 * @version 4/10/2020
 */
public class PriceComparator implements java.util.Comparator<TradeOrder>
{

    // TODO complete class
    private boolean ascending;
    /**
     * PriceComparator constructor for ascending
     */
    public PriceComparator() {
        ascending = true;
    }
    /**
     * PriceComparator constructor
     * @param asc ascending or descending
     */
    public PriceComparator(boolean asc) {
        ascending = asc;
    }
    /**
     * compares two trade orders
     * @return int difference
     */
    public int compare(TradeOrder order1, TradeOrder order2) {
        if (order1.isMarket() && order2.isMarket()) {
            return 0;
        }
        else if (order1.isMarket()) {
            return -1;
        }
        else if (order2.isMarket()) {
            return 1;
        }
        else {
            if (ascending) {
                return (int)(Math.round((order1.getPrice() - 
                    order2.getPrice()) * 100));
            }
            else {
                return (int)(Math.round((order2.getPrice() - 
                    order1.getPrice()) * 100));
            }
        }
    }

}
