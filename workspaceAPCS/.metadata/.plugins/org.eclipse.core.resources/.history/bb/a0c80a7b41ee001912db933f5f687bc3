/**
   TODO Write a one-sentence summary of your class here.
   TODO Follow it with additional details about its purpose, what abstraction
   it represents, and how to use it.

   @author  Richard Cao
   @version 10/7

   @author Period - 3
   @author Assignment - JMCh10 Lipogrammer

   @author Sources - Richard Cao
 */
public class LipogramAnalyzer
{
    private String text;

    /**
       Constructor: Saves the text string
       @param text String to analyze
     */
    public LipogramAnalyzer(String text)
    {
        this.text = text;
    }

    /**
       Returns the text string with all characters equal to letter 
       replaced with '#'.

       @param letter character to replace
       @return text string with all characters equal to letter 
                    replaced with '#'
     */
    public String mark(char letter)
    {
        String result = "";
        for (int i = 0; i < text.length(); i++) {
        	if (text.charAt(i) == letter) {
        		result += "#";
        	}
        	else {
        		result += text.substring(i, i+1);
        	}
        }
        return result;
    }


    /**
       Returns a String that concatenates all "offending"
       words from text that contain letter; the words are
       separated by '\n' characters; the returned string
       does not contain duplicate words: each word occurs
       only once; there are no punctuation or whitespace
       characters in the returned string.
  
       @param letter character to find in text
       @return String containing all words with letter
     */
    public String allWordsWith(char letter)
    {
        String result = "";
        for (int i = 0; i < text.length(); i++) {
            if (text.charAt(i) == letter && !text.contains(extractWord(i))) {
            	result += extractWord(i) + "\n";
            }
       }
        return result;
    }

	// made public for test purposes
    /**
       Returns the word that contains character at pos
       excluding any punctuation or whitespace.
  
       @param pos location of character
       @return word that contains character at pos
     */
    public String extractWord(int pos)
    {
    	String letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    	String back = text.substring(pos, text.length());
        String front = text.substring(0, pos);
        if (pos != text.length() - 1) {
        	for (int i = pos + 1; i < text.length(); i++) {
        		if (!letters.contains(text.substring(i, i+1)) || i == text.length() - 1) {
        			back = text.substring(pos, i);
        			break;
        		}
        	}
        }
        for (int i = pos - 1; i >= 0; i--) {
        	if(!letters.contains(text.substring(i, i+1)) || i = 0) {
        		front = text.substring(i + 1, pos);
        		break;
        	}
        }
        return front + back;
    }
}
